version: 1.0

description: Send emails to admin regarding vulnerabilities on VMs associated with them


input:
  - db_file_path
  - email_from
  - email_to
  - footer
  - header
  - subject
  - smtp_account
  - attachments_tmp_dir_path
  - send_html

vars:
  - body: null
  - stdout: null
  - stderr: null

output:
  - stdout: <% ctx().stdout %>
  - stderr: <% ctx().stderr %>

tasks:
  # get vulnerability information intended for admins
  get_admin_info:
    action: stackstorm_greenbone.get.info.for.admin
      get_html=<% ctx().send_html %>
    next:
      - when: <% result().result != "query resulted in no output" %>
        publish:
          - body: <% result().result %>
          - stdout: <% result().result %>
        do:
          - create_attachment_file
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
        do: fail

  # create csv file for information intended for admins
  create_attachment_file:
    action: stackstorm_greenbone.create.csv.file
      as_admin=true
      dir_path=<% ctx().attachments_tmp_dir_path %>
      user_id=""
    next:
      - when: <% succeeded() %>
        publish:
          - attachment_list: <% list( result().result ) %>
        do:
          - send_email
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
        do: fail

  # populate and send email to specified email address
  send_email:
    action: stackstorm_send_notifications.send.email
      send_as_html=<% ctx().send_html %>
      smtp_account=<% ctx().smtp_account %>
      email_to=<% ctx().email_to %>
      email_from=<% ctx().email_from %>
      body=<% ctx().body %>
      subject=<% ctx().subject %>
      footer=<% ctx().footer %>
      header=<% ctx().header %>
      attachment_filepaths=<% ctx().attachment_list %>
      admin_override=True
      admin_override_email=<% ctx().email_to %>
    next:
      - when: <% succeeded() %>
        publish:
          - stdout: <% result().stdout %>
      - when: <% failed() %>
        publish:
          - stderr: <% result().stderr %>
        do: fail

